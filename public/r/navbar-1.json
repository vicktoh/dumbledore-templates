{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "navbar-1",
  "type": "registry:component",
  "title": "Navbar 1",
  "description": "A navbar component with a navbar title.",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "navigation-menu",
    "sheet"
  ],
  "files": [
    {
      "path": "registry/navbars/navbar-1/index.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\n\nimport { cn } from '@/lib/utils';\nimport {\n    NavigationMenu,\n    NavigationMenuContent,\n    NavigationMenuItem,\n    NavigationMenuLink,\n    NavigationMenuList,\n    NavigationMenuTrigger,\n    navigationMenuTriggerStyle,\n} from '@/components/ui/navigation-menu';\nimport { Button, ButtonProps } from '@/components/ui/button';\nimport { MenuIcon } from 'lucide-react';\nimport { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from '@/components/ui/sheet';\nimport { NavBar1Item } from './types';\n\n\n\nexport type NavBar1SecondaryButton = ButtonProps & {\n    title: string;\n    link?: string;\n};\n\n\n\ntype NavBar1Props = {\n    navItems?: NavBar1Item[];\n    logoComponent?: React.ReactNode;\n    logoTitle?: string;\n    secondaryButtons?: NavBar1SecondaryButton[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    LinkComponent?: React.JSXElementConstructor<any>\n};\nconst SecondaryButtons: NavBar1SecondaryButton[] = [\n    {\n        title: 'Login',\n        link: '/login',\n    },\n    \n];\n\nexport default function NavBar1({\n    navItems=[],\n    logoComponent,\n    logoTitle = 'Logo',\n    secondaryButtons = SecondaryButtons,\n    LinkComponent\n}: NavBar1Props) {\n    \n    return (\n        <div className=\"flex flex-row items-center px-1  md:px-10 w-full py-5 gap-4\">\n            {logoComponent && logoComponent}\n            {logoTitle && <h3 className=\"text-xl font-bold\">{logoTitle}</h3>}\n\n            {navItems.length > 0 && (\n                <NavigationMenu className='ml-auto hidden md:block'>\n                    <NavigationMenuList>\n                        {navItems.map((item, i) =>{\n                            const Component = LinkComponent || (item.link ? NavigationMenuLink : NavigationMenuTrigger);\n                            return(\n                            <NavigationMenuItem key={`navbar-1-${i}`} >\n                                <Component href={item.link || undefined} className={!item.Component && !item.children ? navigationMenuTriggerStyle() : \"\"}>\n                                        {item.title}\n                                </Component>\n\n                                {item.children?.length || item.Component ? (\n                                    <NavigationMenuContent>\n                                        \n                                        {item.children && (\n                                            <ul className=\"flex flex-col gap-2 min-w-40  p-6\">\n                                                {item.children?.map(\n                                                    (child, i) => {\n                                                        const LinkComp = LinkComponent || NavigationMenuLink;\n                                                        return (\n                                                        <li\n                                                            key={`navbar-1-${i}`}\n                                                            className=\"hover:bg-muted py-2\"\n                                                        >\n                                                            <NavigationMenuLink\n                                                                asChild\n                                                            >\n                                                                <LinkComp\n                                                                    href={\n                                                                        child.link || undefined\n                                                                    }\n                                                                >\n                                                                    {\n                                                                        child.title\n                                                                    }\n                                                                </LinkComp>\n                                                            </NavigationMenuLink>\n                                                        </li>\n                                                    )}\n                                                )}\n                                            </ul>\n                                        )}\n                                        {item.Component && item.Component}\n                                    </NavigationMenuContent>\n                                ) : null}\n                            </NavigationMenuItem>\n                        )})}\n                    </NavigationMenuList>\n                </NavigationMenu>\n            )}\n            {secondaryButtons?.length && (\n                <div className=\"hidden md:flex flex-row gap-2\">\n                    {secondaryButtons.map((button, i) => (\n                        <Button key={`navbar-1-secondary-${i}`} {...button}>{button.title}</Button>\n                    ))}\n                </div>\n            )}\n            <div className=\"flex md:hidden ml-auto\">\n                <Sheet>\n                    <SheetTrigger asChild>\n                        <Button variant=\"outline\" size=\"icon\">\n                            <MenuIcon />\n                        </Button>\n                    </SheetTrigger>\n                    <SheetContent side=\"top\">\n                        <SheetHeader>\n                            <SheetTitle className='hidden'>Menu</SheetTitle>\n                            <div className='flex flex-row  items-center gap-2'>\n                                {logoComponent && logoComponent}\n                                {logoTitle && <h3 className=\"text-xl font-bold\">{logoTitle}</h3>}\n                            </div>\n                        </SheetHeader>\n                        <div className=\"flex flex-col gap-4 pt-4 pb-10 px-5\">\n                            {navItems.map((item, i) => (item.children || item.Component) ?  (\n                                <div key={`mobile-navbar-${i}`}>\n                                    <div className='text-lg font-bold'>{item.title}</div>\n                                    <div className='flex flex-col gap-2 px-5 py-2'>\n                                        {item.children?.map((child, i) => (\n                                            <a href={child.link} key={`navbar-1-${i}`}>{child.title}</    a>\n                                        ))}\n                                    </div>\n                                    {item.Component && item.Component}\n                                </div>\n                            ): (\n                                <a href={item.link || ''} key={`navbar-1-${i}`}>{item.title}</a>\n                            ))}\n                        </div>\n                    </SheetContent>\n                </Sheet>\n            </div>\n        </div>\n    );\n}\n\nconst ListItem = React.forwardRef<\n    React.ElementRef<'a'>,\n    React.ComponentPropsWithoutRef<'a'>\n>(({ className, title, children, ...props }, ref) => {\n    return (\n        <li>\n            <NavigationMenuLink asChild>\n                <a\n                    ref={ref}\n                    className={cn(\n                        'block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground',\n                        className\n                    )}\n                    {...props}\n                >\n                    <div className=\"text-sm font-medium leading-none\">\n                        {title}\n                    </div>\n                    <p className=\"line-clamp-2 text-sm leading-snug text-muted-foreground\">\n                        {children}\n                    </p>\n                </a>\n            </NavigationMenuLink>\n        </li>\n    );\n});\nListItem.displayName = 'ListItem';\n",
      "type": "registry:component"
    },
    {
      "path": "registry/navbars/navbar-1/types.ts",
      "content": "export type NavBar1Item = {\n   title: string;\n   link?: string;\n   children?: NavBar1Item[];\n   Component?: React.ReactNode;\n   LinkComponent?: React.JSXElementConstructor<\n       React.LinkHTMLAttributes<HTMLAnchorElement>\n   >;\n};",
      "type": "registry:lib"
    }
  ]
}