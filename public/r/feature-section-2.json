{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "feature-section-2",
  "type": "registry:component",
  "title": "Feature Section 2",
  "description": "A feature section component with a feature section title.",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "registry/feature-sections/feature-section-2/index.tsx",
      "content": "import React from 'react'\nimport {  Feature, FeatureSection2Props } from '../types';\nimport { Button } from '@/components/ui/button';\nimport { LucideGitBranch } from 'lucide-react';\nimport { LucideBrain } from 'lucide-react';\nimport { LucideCodeXml } from 'lucide-react';\nconst defatuleFeatures: Feature[] = [\n   {     \n       title: 'Software Development 1',\n       description: \"Custom software solutions tailored to your organization's unique needs, delivered with magical precision and excellence.\",\n       Icon: <LucideCodeXml className='w-12 h-12 text-white'/>,\n   },\n   {\n       title: 'AI Integration',\n       description: \"Harness the power of artificial intelligence to transform your business processes and enhance decision-making capabilities.\",\n       Icon: <LucideBrain className='w-12 h-12 text-white'/>,\n   },\n   {\n       title:\"Workflow Automation\",\n       description:` Say goodbye to manual and repetitive tasks, say hello to unlimited productivity and speed.\nStreamline your operations with intelligent automation solutions that make work flow as smoothly as a well-cast spell.`,\n       Icon: <LucideGitBranch className='w-12 h-12 text-white' width={48} height={48}/>,\n   },\n];\n\nexport default function FeatureSection2({title, features = defatuleFeatures, bgUrl='/hero-2-bg.jpg'}: FeatureSection2Props) {\n  return (\n    <div className='flex flex-col gap-20 p-16' style={{backgroundImage: `url(${bgUrl})`, backgroundSize: 'cover', backgroundPosition: 'center'}}>\n      <div className='absolute inset-0 bg-black opacity-50 z-0'></div>\n      <h1 className='text-4xl font-bold text-white z-10'>{title}</h1>\n      <div className='grid grid-cols-1 md:grid-cols-3 gap-10 z-10'>\n        {features.map((feature) => (\n          <div key={feature.title} className='flex flex-col items-center gap-8'>\n             <div className=\"flex flex-col gap-6\">\n               {feature.Icon}\n\n               <h3 className=\"text-xl md:text-3xl font-bold text-white\">{feature.title}</h3>\n               <p className=\"text-base text-white\">{feature.description}</p>\n             </div>\n             {feature?.buttonProps && <Button {...feature.buttonProps}>\n               {feature?.buttonProps?.rightIcon && <feature.buttonProps.rightIcon className='w-4 h-4' />}\n               {feature?.buttonProps?.title || \"Button\"}\n               {feature?.buttonProps?.leftIcon && <feature.buttonProps.leftIcon className='w-4 h-4' />}\n             </Button>}\n          </div>\n        ))}\n      </div>\n\n    </div>\n  )\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/feature-sections/types.ts",
      "content": "import { ButtonProps } from \"@/components/ui/button\";\nimport { LucideIcon } from \"lucide-react\";\n\n  export  type Feature = {\n   title: string;\n   description: string;\n   Icon: React.ReactNode;\n   buttonProps?: ButtonProps & {title: string, rightIcon?: LucideIcon, leftIcon?: LucideIcon};\n};\nexport type FeatureSection1Props = {\n   title: string;\n   tagLine?: string;\n   description?: string;\n   features?: Feature[];\n   primaryButtonProps?: ButtonProps & {title: string};\n   secondaryButtonProps?: ButtonProps & {title: string}\n};\n\nexport type FeatureSection2Props = {\n   title: string; \n   features?: Feature[];\n   bgUrl?: string;\n}\nexport type Feature3Feature = {\n   title: string;\n   description: string;\n   Icon?: React.JSXElementConstructor<{className?: string}>;\n   buttonProps?: ButtonProps & {title: string};\n   secondaryButtonProps?: ButtonProps & {title: string};\n   type: \"video\" | \"image\",\n   source?: string;\n}\nexport type FeatureSection3Props = {\n   tagline?: string;\n   title:string;\n   description:string;\n   tabs?: Feature3Feature[];\n   primaryButtonProps?: ButtonProps & {title: string};\n   secondaryButtonProps?: ButtonProps & {title: string}\n}",
      "type": "registry:lib"
    }
  ]
}